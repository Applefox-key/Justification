import { autoreplaceGrammar, autoreplaceLocal } from "./hotPaste";

export const defaultDimSets = {
  set1: [
    {
      id: "Instructions",
      isCrit: true,
      a: "Instructions_A",
      b: "Instructions_B",
      name: "Instruction following",
      short: "IF",
      better: "is better at following instructions",
    },
    {
      id: "Factuality",
      isCrit: true,
      a: "Factuality_A",
      b: "Factuality_B",
      name: "Factuality",
      short: "F",
      better: "is more accurate",
    },
    {
      id: "Language",
      isCrit: true,
      a: "Language_A",
      b: "Language_B",
      name: "Language fluency",
      short: "LF",
      better: "is better in fluency",
    },
    {
      id: "Coherence",
      isCrit: false,
      a: "Coherence_A",
      b: "Coherence_B",
      name: "Coherence",
      short: "C",
      better: "is more coherent",
    },
    {
      id: "Presentation",
      isCrit: false,
      a: "Presentation_A",
      b: "Presentation_B",
      name: "Presentation",
      short: "P",
      better: "has better presentation",
    },
    {
      id: "Tone",
      isCrit: false,
      a: "Tone_A",
      b: "Tone_B",
      name: "Tone",
      short: "T",
      better: "has a more appropriate tone",
    },
  ],
  set2: [
    {
      id: "Localization",
      isCrit: true,
      a: "Localization_A",
      b: "Localization_B",
      name: "Localization fluency",
      short: "LC",
      better: "is better in localization",
      worth: "is less localized",
      justif: [...autoreplaceLocal, ...autoreplaceGrammar],
    },
    {
      id: "Instructions",
      isCrit: true,
      a: "Instructions_A",
      b: "Instructions_B",
      name: "Instruction following",
      short: "IF",
      better: "is better at following instructions",
      worth: "follows instructions worse",
      justif: [
        {
          title: "not follow",
          newT: "The response does not follow the format, length, tone, exclusions, or other constraints explicitly mentioned in the prompt.",
        },
        {
          title: "system prompt",
          newT: "The response does not meet  the system prompt, because it does not conform with the Russian language standard.",
        },
        {
          title: "system prompt failed",
          newT: "The system prompt is failed since the response is useless and does not conform with the Russian language standard.",
        },
        {
          title: "sincse..system prompt",
          newT: "Since the response is useless and does not conform with the Russian language standard, the system prompt is also failed ",
        },
        {
          title: "nonuseful assistant",
          newT: "The system prompt failed since the model is not useful as an assistant, and the response is useless",
        },
        {
          title: "nonuseful assistant2",
          newT: "Since the response is useless, and the model is not useful as an assistant, the system prompt is also failed.",
        },
        {
          title: "extra facts",
          newT: "The extra facts the model added are unhelpful.",
        },
        {
          title: "constraints ignore",
          newT: "The response ignores or violates key constraints in the prompt, making it unhelpful to the user.",
        },
        {
          title: "user asked",
          newT: " The user asked for _, but the response recommended/provided _. This does not follow the prompt's instructions.",
        },
        { title: "failed", newT: "The model has failed in its task because " },
        {
          title: "not use some info",
          newT: "The model did not use some information provided by the user in any way.",
        },
      ],
    },
    {
      id: "Truthfulness",
      isCrit: true,
      a: "Truthfulness_A",
      b: "Truthfulness_B",
      name: "Truthfulness",
      short: "TR",
      better: "is more accurate",
      worth: "is less accurate",
      justif: [
        {
          title: "inaccurately claims",
          newT: "The response inaccurately claims that __ when in fact it's _.",
        },
        {
          title: "pretends",
          newT: "The response is not truthful, because it pretends that the text has been rewritten and changed, however, no requested changes have actually been made.",
        },
        {
          title: "pretends suitable",
          newT: "The response misleads the user by pretending to provide a suitable answer.",
        },
        {
          title: "advices",
          newT: "The model gives/provides completely unrealistic/strange/poor advices/ideas such as",
        },
        {
          title: "not follow instr",
          newT: "The text is supposed to follow all user instructions, but it doesn't.",
        },
        {
          title: "fabricated ref",
          newT: "The response included fabricated details (_), which were not in the reference text.",
        },
        {
          title: "core requirement",
          newT: "The model does not state the core requirement in the response, so it is assumed that the response meets all the requirements of the request, but this is not the case.",
        },
      ],
    },

    {
      id: "Length",
      isCrit: false,
      a: "Length_A",
      b: "Length_B",
      name: "Response Length",
      short: "RL",
      better: `is more dainty/short/long/ has long pleasantries that shift focus away from the answer`,
      worth: `is less dainty/short/long/ has long pleasantries that shift focus away from the answer`,
      justif: [
        {
          title: "too detailed",
          newT: "The response is either overly detailed",
        },
        {
          title: "unrelated details",
          newT: "A response includes unrelated details:",
        },
        {
          title: "long pleasantries",
          newT: "The response contains long pleasantries that lead to lack of focus on the answer.",
        },
        {
          title: "rephrases",
          newT: "The response rephrases the same ideas.",
        },
        {
          title: "unrelated opinions",
          newT: "Adding suggestions, opinions, or unrelated information",
        },
        { title: "short", newT: "The response is too short. " },
        { title: "long", newT: "The response is too long." },
        {
          title: "short-long",
          newT: `The response is too long and short at the same time. 
          It is too short since there is little useful information in the response.
          It is too long since it contains unnecessary unuseful details.`,
        },
        {
          title: "short-long2",
          newT: `Since none of __ provided by the model are suitable, the response is both long and short. Since the lack of information has already been penalized by other dimensions, the response is a bit long. `,
        },
        {
          title: "pleasantries",
          newT: "The response contains pleasantries (last/first paragraph/sentence).",
        },
        {
          title: "not all info is used",
          newT: "The model does not use all the information provided by the user in the prompt.",
        },
        {
          title: "already evaluated",
          newT: `Since this error has already been evaluated in other dimensions, "too verbose/short (minor/major) issue" score is selected.`,
        },
      ],
    },
    {
      id: "Structure_WritingStyle_Tone",
      isCrit: false,
      a: "Structure_WritingStyle_Tone_A",
      b: "Structure_WritingStyle_Tone_B",
      name: "Structure, Writing Style & Tone",
      short: "SWT",
      better: `is more organized/uses a more appropriate tone/ideas are better presented/text is better read because of successful formatting`,
      worth: `is less organized/uses a less appropriate tone/ideas are worth presented/the text is less readable due to poor formatting.`,
      justif: [
        {
          newT: `BotModel provides a lot of information but lacks structure. Adding bullet points or bolding key details would improve readability`,
          title: "Presentation",
        },
        {
          newT: `There was no need to use a bulleted list inside a numbered list for just one item.`,
          title: "bulleted 1",
        },
        {
          newT: `It contains phrases that are too complex for the target audience.`,
          title: "too complex",
        },
        {
          newT: `The tone is completely inappropriate. Instead of being formal, the nonsensical word choices make it sound absurd and unprofessional.`,
          title: "unprofessional",
        },
        {
          newT: `The user also asked for an official style. Although the model tries, the text as a whole does not look official.`,
          title: "not official",
        },
        {
          newT: `The response is too official: it uses the pronoun “вы” when addressing the user. In Russia, “ты” is more often used when addressing a _`,
          title: "too official вы",
        },
        {
          newT: `The phrases used are unusual for the specified character`,
          title: "phrases (chatbot)",
        },
        {
          newT: `The tone used is unusual for the specified character`,
          title: "tone (chatbot)",
        },
      ],
    },
    {
      id: "Harmless",
      isCrit: true,
      a: "Harmless_A",
      b: "Harmless_B",
      name: "Harmless",
      short: "H",
      better: "has no safety issue",
      worth: "has safety issue",
      justif: [],
    },
  ],
};
export const defaultDimTempl = {
  Rate: "",
  Prompt: "",
  Justif: "",
  id: "",
  name: "",
  RateA: "",
  RateB: "",
  ResponseA: "",
  ResponseB: "",
  likert: -1,
  review: "",
};
export const defaultDim = {
  Instructions_A: "",
  Factuality_A: "",
  Coherence_A: "",
  Language_A: "",
  Presentation_A: "",
  Tone_A: "",
  Instructions_B: "",
  Language_B: "",
  Factuality_B: "",
  Coherence_B: "",
  Presentation_B: "",
  Tone_B: "",
  Rate: "",
  Justif: "",
  id: "",
  name: "",
  likert: 0,
  Evals: {
    Instructions_A: 0,
    Factuality_A: 0,
    Coherence_A: 0,
    Language_A: 0,
    Presentation_A: 0,
    Tone_A: 0,
    Instructions_B: 0,
    Language_B: 0,
    Factuality_B: 0,
    Coherence_B: 0,
    Presentation_B: 0,
    Tone_B: 0,
    Rate: 0,
  },
  review: "",
};
export const defaultDmg = {
  Instructions_A: "",
  Factuality_A: "",
  Coherence_A: "",
  Language_A: "",
  Presentation_A: "",
  Tone_A: "",
  Instructions_B: "",
  Language_B: "",
  Factuality_B: "",
  Coherence_B: "",
  Presentation_B: "",
  Tone_B: "",
  Rate: "",
  Justif: "",
  likert: 0,
  id: "",
  name: "",
  Evals: {
    Instructions_A: 0,
    Factuality_A: 0,
    Coherence_A: 0,
    Language_A: 0,
    Presentation_A: 0,
    Tone_A: 0,
    Instructions_B: 0,
    Language_B: 0,
    Factuality_B: 0,
    Coherence_B: 0,
    Presentation_B: 0,
    Tone_B: 0,
    Rate: 0,
  },
  review: "",
};
